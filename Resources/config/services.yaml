
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    _instanceof:
        Opera\CoreBundle\BlockType\BlockTypeInterface:
            tags: ['cms.block_type']

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    Opera\CoreBundle\:
        resource: '../../*'
        exclude: '../../{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    Opera\CoreBundle\Controller\:
        resource: '../../Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    Opera\CoreBundle\Routing\CmsRoutesLoader:
        tags: ['routing.loader']

    Opera\CoreBundle\Cms\Context:
        public: true
    
    Opera\CoreBundle\Form\Type\OperaAdminAutocompleteType:
        arguments: [ '@doctrine', '@easyadmin.config.manager' ]
        tags: 
            - { name: 'form.type', alias: 'operaadmin_autocomplete' }

    Opera\CoreBundle\EventListener\RouterListener:
        arguments:
            - '@Opera\CoreBundle\Repository\PageRepository'
            - '%opera_core.route_prefix%'
        
    opera.cache:
        class: Symfony\Component\Cache\Adapter\TagAwareAdapter
        public: true
        decorates: cache.app
        arguments: ['@opera.cache.inner', '@opera.cache.inner']

    Opera\CoreBundle\Cms\CacheManager:
        arguments:
            $cacheItemPool: '@opera.cache'
            $isCacheActive: '%opera_core.cacheable%'

